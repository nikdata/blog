ARG PYTHON_VER
ARG R_VER
ARG PYTHON_ENV
ARG QUARTO_VER
ARG SETUP_FOLDER

# STAGE 1: Base Image
FROM rocker/r-ver:${R_VER:-4.4.3} AS stg1

# linux updates
RUN  apt-get update && apt-get install -y -qq --no-install-recommends --purge \
    python3-launchpadlib \
    python3-venv \
    python3-pip \
    nano \
    curl \
    wget \
    gdebi \
    xdg-utils \
    libcurl4-openssl-dev \
    libpq-dev \
    libssl-dev \
    libxml2-dev \
    git \
    libgit2-dev \
    gcc \
    gfortran \
    libglpk40 \
    htop \
    jq \
    libxtst6 \
    libxt6 \
    xdg-utils \
    tar \
    bzip2 \
    unzip \
    openssh-server \
    build-essential \
    libedit-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && rm -rf /tmp/*

ARG SETUP_FOLDER
ENV SETUP_FOLDER=${SETUP_FOLDER}

ARG QUARTO_VER
ENV QUARTO_VER=${QUARTO_VER}

# copy files
RUN mkdir ${SETUP_FOLDER}
COPY install_quarto.sh /${SETUP_FOLDER}/

# install quarto
RUN bash ./${SETUP_FOLDER}/install_quarto.sh $QUARTO_VER

# STAGE 2: Python Libraries
FROM python:${PYTHON_VER:-3.12}-slim-bookworm AS stg2

RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-launchpadlib \
    nano \
    curl \
    wget \
    gdebi \
    xdg-utils \
    git \
    libgit2-dev \
    gcc \
    gfortran \
    libglpk40 \
    htop \
    jq \
    libxtst6 \
    libxt6 \
    xdg-utils \
    tar \
    bzip2 \
    unzip \
    openssh-server \
    build-essential \
    libedit-dev \
    && rm -rf /var/lib/apt/lists/*

ARG PYTHON_ENV
ENV PYTHON_ENV=${PYTHON_ENV}

ARG SETUP_FOLDER
ENV SETUP_FOLDER=${SETUP_FOLDER}

ENV PATH="/opt/${PYTHON_ENV}/bin:$PATH"

# copy files
RUN mkdir ${SETUP_FOLDER}
COPY packages.txt /${SETUP_FOLDER}/

# activate python environment
RUN python3 -m venv /opt/${PYTHON_ENV}

# install uv globally
RUN pip install uv

# install python packages in virtual env
RUN uv pip install --no-cache -r ./${SETUP_FOLDER}/packages.txt

# STAGE 3: R Package Install
FROM stg1 AS stg3

ARG SETUP_FOLDER
ENV SETUP_FOLDER=${SETUP_FOLDER}

COPY rpkgs.txt /${SETUP_FOLDER}/

# install R pak
RUN Rscript -e 'install.packages("pak", repos = sprintf("https://r-lib.github.io/p/pak/stable/%s/%s/%s", .Platform$pkgType, R.Version()$os, R.Version()$arch))'

# install R packages using pak
RUN Rscript -e "pak::pkg_install(readLines('/${SETUP_FOLDER}/rpkgs.txt'))"

# STAGE 4: final build
FROM rocker/r-ver:${R_VER:-4.4.3}

RUN  apt-get update && apt-get install -y -qq --no-install-recommends --purge \
    python3-launchpadlib \
    python3-venv \
    python3-pip \
    curl \
    libcurl4-openssl-dev \
    libpq-dev \
    libssl-dev \
    libxml2-dev \
    git \
    libgit2-dev \
    gcc \
    gfortran \
    libglpk40 \
    jq \
    tar \
    bzip2 \
    unzip \
    openssh-server \
    build-essential \
    libedit-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && rm -rf /tmp/* 

ARG PYTHON_ENV
ENV PYTHON_ENV=${PYTHON_ENV}

ENV PATH="/opt/${PYTHON_ENV}/bin:$PATH"

COPY --from=stg1 /opt/quarto /opt/quarto
COPY --from=stg2 /opt/${PYTHON_ENV} /opt/${PYTHON_ENV}
COPY --from=stg3 /usr/local/lib/R/site-library /usr/local/lib/R/site-library